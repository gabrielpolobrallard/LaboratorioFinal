<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>